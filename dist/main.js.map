{"version":3,"file":"main.js","mappings":"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","sources":["webpack://ink-game/webpack/bootstrap","webpack://ink-game/./src/scripts/platform.js","webpack://ink-game/./src/scripts/scenery.js","webpack://ink-game/./src/scripts/trap.js","webpack://ink-game/./assests/ink.png","webpack://ink-game/./src/scripts/ink.js","webpack://ink-game/./src/scripts/ink_bullets.js","webpack://ink-game/./assests/splat1.png","webpack://ink-game/./assests/splat2.png","webpack://ink-game/./assests/ghost-right1.png","webpack://ink-game/./assests/ghost-right2.png","webpack://ink-game/./assests/ghost-left1.png","webpack://ink-game/./assests/ghost-left2.png","webpack://ink-game/./assests/ghost-jump.png","webpack://ink-game/./assests/concrete.png","webpack://ink-game/./assests/drywall.png","webpack://ink-game/./assests/cityskyline.png","webpack://ink-game/./assests/toonblueeyes.png","webpack://ink-game/./assests/spikes.png","webpack://ink-game/./assests/audio/clint_east.mp3","webpack://ink-game/webpack/runtime/global","webpack://ink-game/webpack/runtime/publicPath","webpack://ink-game/./src/index.js","webpack://ink-game/./src/scripts/player.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","class Platform {\n    constructor(position, ctx, image, dimensions) {\n        this.position = position\n        this.ctx = ctx\n        this.image = image\n        this.dimensions = dimensions\n    }\n\n    draw() {\n        this.ctx.drawImage(this.image, this.position.x, this.position.y, this.dimensions.width, this.dimensions.height)\n    }\n}\n\nexport default Platform;","class Scenery {\n    constructor(position, ctx, image, dimensions) {\n        this.position = position\n        this.ctx = ctx\n        this.image = image\n        // this.width = 1500\n        // this.height = 502\n        this.dimensions = dimensions\n    }\n\n    draw() {\n        // this.ctx.fillStyle = 'blue'\n        // this.ctx.fillRect(this.position.x, this.position.y, this.width, this.height)\n        // // console.log(\"plat draw was here\")\n        this.ctx.drawImage(this.image, this.position.x, this.position.y, this.dimensions.width, this.dimensions.height)\n    }\n}\n\nexport default Scenery;","class Trap {\n    constructor(position, ctx, image, dimensions) {\n        this.position = position\n        this.ctx = ctx\n        this.image = image\n        this.dimensions = dimensions\n    }\n\n    draw() {\n        this.ctx.drawImage(this.image, this.position.x, this.position.y, this.dimensions.width, this.dimensions.height)\n    }\n}\n\nexport default Trap;","export default __webpack_public_path__ + \"images/ink.png\";","import inkImage from '../../assests/ink.png';\n\nclass Ink {\n    constructor(position, ctx, dimensions) {\n        this.position = position\n        this.ctx = ctx\n        this.image = new Image();\n        this.image.src = inkImage\n        this.dimensions = dimensions\n    }\n\n    draw() {\n        this.ctx.drawImage(this.image, this.position.x, this.position.y, this.dimensions.width, this.dimensions.height)\n    }\n\n}\n\nexport default Ink;","class InkBullets {\n    constructor(position, ctx, image) {\n        this.position = position\n        this.ctx = ctx \n        this.width = 50\n        this.height = 50\n        this.image = image\n    }\n\n    draw() {\n        this.ctx.drawImage(this.image, this.position.x, this.position.y, this.width, this.height);  \n    }\n}\n\nexport default InkBullets;","export default __webpack_public_path__ + \"images/splat1.png\";","export default __webpack_public_path__ + \"images/splat2.png\";","export default __webpack_public_path__ + \"images/ghost-right1.png\";","export default __webpack_public_path__ + \"images/ghost-right2.png\";","export default __webpack_public_path__ + \"images/ghost-left1.png\";","export default __webpack_public_path__ + \"images/ghost-left2.png\";","export default __webpack_public_path__ + \"images/ghost-jump.png\";","export default __webpack_public_path__ + \"images/concrete.png\";","export default __webpack_public_path__ + \"images/drywall.png\";","export default __webpack_public_path__ + \"images/cityskyline.png\";","export default __webpack_public_path__ + \"images/toonblueeyes.png\";","export default __webpack_public_path__ + \"images/spikes.png\";","export default __webpack_public_path__ + \"assets/audio/clint_east.mp3\";","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// import Example from './scripts/example';\nimport Player from './scripts/player';\nimport Platform from './scripts/platform';\nimport Scenery from './scripts/scenery';\nimport Trap from './scripts/trap';\nimport Ink from './scripts/ink';\nimport InkBullets from \"./scripts/ink_bullets\"\nimport splatOne from '../assests/splat1.png';\nimport splatTwo from '../assests/splat2.png';\nimport ghostRight1 from '../assests/ghost-right1.png';\nimport ghostRight2 from '../assests/ghost-right2.png';\nimport ghostLeft1 from '../assests/ghost-left1.png';\nimport ghostLeft2 from '../assests/ghost-left2.png';\nimport ghostJump from '../assests/ghost-jump.png';\nimport concreteImage from '../assests/concrete.png';\nimport drywallImage from '../assests/drywall.png';\nimport skylineImage from '../assests/cityskyline.png';\nimport toonblueeyesImage from '../assests/toonblueeyes.png';\nimport spikesImage from '../assests/spikes.png';\nimport clintEast from '../assests/audio/clint_east.mp3';\n\nconst ANIMATE_DELAY = 15\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // console.log('hello world')\n    \n    // const main = document.getElementById('main');\n    // new Example(main);\n    const canvas = document.querySelector(\"#game-canvas\")\n    const ctx = canvas.getContext('2d')\n    canvas.width = 950\n    canvas.height = 502\n\n    const hiddenCanvas = document.querySelector(\"#hidden-canvas\")\n    const hiddenCtx = hiddenCanvas.getContext('2d')\n    hiddenCanvas.width = 950\n    hiddenCanvas.height = 502\n\n    const startGameButton = document.getElementById('start-game')\n    const gameMusic = new Audio(clintEast)\n    gameMusic.autoplay = false\n    startGameButton.addEventListener('click', () => {\n          gameMusic.play();\n    })\n  \n    const standing_right = [ghostRight1, ghostRight2]\n    const standing_left = [ghostLeft1, ghostLeft2]\n\n    function createImage (imageSrc) {\n        const image = new Image();\n        image.src = imageSrc;\n        return image;\n    }   \n\n    const player = new Player({\n        x: 50,\n        y: 200,\n    }, canvas, ctx, createImage(ghostRight1))\n\n    // function shootInk() {\n    //     if (player.facing === \"right\" && player.inkMeter >= 10) {\n    //         const inkBullet = new InkBullets({x: player.position.x + 10, y: player.position.y}, hiddenCtx, createImage(splatOne))\n    //         inkBullet.draw();\n    //     }\n    //     else if (player.facing === \"left\" && player.inkMeter >= 10) {\n    //         const inkBullet = new InkBullets({x: player.position.x - 10, y: player.position.y}, hiddenCtx, createImage(splatTwo))\n    //         inkBullet.draw();\n    //     }\n    // }\n\n    let platforms \n    let scenery\n    let traps\n    let inks\n\n    let keys = {\n        ArrowRight: {\n            pressed: false,\n        },\n        ArrowLeft: {\n            pressed: false,\n        },\n        ArrowUp: {\n            pressed: false,\n        },\n        Space: {\n            pressed: false,\n        }\n    }\n\n    const maxInkLevel = 100;\n    let inkLevel = 0;\n    let scrollOffset;\n\n    function reset() {\n\n        platforms = [\n            new Platform({x: 0, y: 427}, ctx, createImage(concreteImage), {width: 300, height: 75}),\n            new Platform({x: 285, y: 427}, ctx, createImage(concreteImage), {width: 300, height: 75}),\n            new Platform({x: 870, y: 427}, ctx, createImage(concreteImage), {width: 300, height: 75}),\n            new Platform({x: 1155, y: 427}, ctx, createImage(concreteImage), {width: 300, height: 75}),\n            new Platform({x: 1440, y: 427}, ctx, createImage(concreteImage), {width: 300, height: 75}),\n            \n            new Platform({x: 650, y: 375}, hiddenCtx, createImage(drywallImage), {width: 150, height: 45}),\n\n            new Platform({x: 250, y: 300}, ctx, createImage(drywallImage), {width: 150, height: 45} )\n        ]\n        \n        scenery = [\n            new Scenery({x: -200, y: 0}, ctx, createImage(skylineImage), {width: 1800, height: 502}),\n            new Scenery({x: 750, y: 50}, ctx, createImage(toonblueeyesImage), {width: 150, height: 150}),\n            \n        ]\n\n        traps = [\n            new Trap({x: 585, y: 450}, ctx, createImage(spikesImage), {width: 275, height: 50})\n        ]\n\n        inks = [\n            new Ink({x: 275, y: 250}, ctx, {width: 30, height: 30}),\n            new Ink({x: 350, y: 250}, ctx, {width: 30, height: 30})\n        ]\n\n        scrollOffset = 0; \n        }\n\n    function gameUpdate() {\n        scenery.forEach(scene => {\n          scene.draw();\n        })\n        traps.forEach(trap => {\n          trap.draw();\n        })\n        inks.forEach(ink => {\n            ink.draw();\n        })\n        platforms.forEach(platform => {\n          platform.draw();\n        })\n      }\n\n    function collisionDetector(collider) {\n        for (let i = 0; i < collider.length; i++) {\n            const collideObj = collider[i];\n            if (player.position.y + player.height <= collideObj.position.y \n                && player.position.y + player.height + player.velocity.y >= collideObj.position.y\n                && player.position.x + player.hitbox.x >= collideObj.position.x\n                && player.position.x <= collideObj.position.x + collideObj.dimensions.width\n                && collideObj.ctx === ctx) {\n                    return true;\n            }\n        }\n        return false;\n    }\n\n   \n\n    function animate() {\n        window.requestAnimationFrame(animate)\n            ctx.fillStyle = 'lime';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n            // hiddenCtx.fillStyle = 'transparent'\n            // hiddenCtx.fillRect(0, 0, hiddenCanvas.width, hiddenCanvas.height)\n            hiddenCtx.clearRect(0, 0, hiddenCanvas.width, hiddenCanvas.height)\n\n            gameUpdate();\n            player.update();\n\n            if (keys.Space.pressed) {\n                if (player.facing === \"right\" && player.inkMeter >= 10) {\n                    const inkBullet = new InkBullets({ x: player.position.x + 95, y: player.position.y + player.height / 3 }, hiddenCtx, createImage(splatOne));\n                    inkBullet.draw();\n                    setTimeout(() => { keys.Space.pressed = false; }, 1500);\n                  } else if (player.facing === \"left\" && player.inkMeter >= 10) {\n                    const inkBullet = new InkBullets({ x: player.position.x - 95, y: player.position.y + player.height / 3}, hiddenCtx, createImage(splatTwo));\n                    inkBullet.draw();\n                    setTimeout(() => { keys.Space.pressed = false; }, 1500);\n                  } else {\n                    keys.Space.pressed = false;\n                  }\n            }\n\n            if (player.facing === \"right\" && !player.isJumping) {\n                player.animationDelay++;\n                if (player.animationDelay >= ANIMATE_DELAY) {\n                    player.animationDelay = 0;\n                    player.animationFrame = (player.animationFrame + 1) % standing_right.length;\n                    player.image.src = standing_right[player.animationFrame];\n                }\n            }\n            else if (player.facing === \"left\" && !player.isJumping) {\n                player.animationDelay++;\n                if (player.animationDelay >= ANIMATE_DELAY) {\n                    player.animationDelay = 0;\n                    player.animationFrame = (player.animationFrame + 1) % standing_left.length;\n                    player.image.src = standing_left[player.animationFrame];\n                }\n            }\n            if (player.isJumping) {\n                player.image.src = ghostJump\n            }\n\n            if (keys.ArrowRight.pressed && player.position.x < 400) {\n                player.velocity.x = 6\n            }\n            else if ((keys.ArrowLeft.pressed && player.position.x > 100) \n                    || (keys.ArrowLeft.pressed && scrollOffset === 0)) {\n                player.velocity.x = -5\n            }\n            else {\n                player.velocity.x = 0\n\n                if (keys.ArrowRight.pressed) {\n                    scrollOffset += 4\n                    platforms.forEach(platform => {\n                        platform.position.x -= 4\n                    }) \n                    traps.forEach(trap => {\n                        trap.position.x -= 4\n                    })\n                    inks.forEach(ink => {\n                        ink.position.x -= 4\n                    })\n                    scenery.forEach(scene => {\n                        scene.position.x -= 3\n                    })}\n                else if (keys.ArrowLeft.pressed && scrollOffset >= 0) {\n                    scrollOffset -= 4\n                    platforms.forEach(platform => {\n                        platform.position.x += 4\n                    }) \n                    traps.forEach(trap => {\n                        trap.position.x += 4\n                    })\n                    inks.forEach(ink => {\n                        ink.position.x += 4\n                    })\n                    scenery.forEach(scene => {\n                        scene.position.x += 3\n                })}\n            }\n\n            if (keys.ArrowUp.pressed) {\n                player.jump()\n            }\n\n            if (collisionDetector(platforms)) {\n                player.velocity.y = 0 \n                player.isJumping = false\n            }\n\n            if (collisionDetector(traps)) {\n                player.isAlive = false\n                player.playerDied(); \n                console.log('you lose');\n                reset();\n                inkLevel = 0\n            }\n\n            for (let i = 0; i < inks.length; i++) {\n                const ink = inks[i];\n                if (player.position.x < ink.position.x + ink.dimensions.width \n                    && player.position.x + player.hitbox.x > ink.position.x \n                    && player.position.y < ink.position.y + ink.dimensions.height\n                    && player.position.y + player.height > ink.position.y) {\n                  inks.splice(i, 1);\n                  if (inkLevel < maxInkLevel) {\n                    inkLevel += 10;\n                    player.inkMeter += 10\n                  }\n                }\n              }\n              const percentageRemaining = (inkLevel / maxInkLevel) * 100;\n              const inkFull = document.querySelector('.ink-full');\n              inkFull.style.width = `${percentageRemaining}%`;\n        }\n\n    reset();\n    animate();\n\n    window.addEventListener('keydown', (e) => {\n        switch (e.key) {\n            case 'ArrowRight':\n                keys.ArrowRight.pressed = true\n                player.facing = \"right\"\n                player.image.src = standing_right[0]\n                break;\n            case 'ArrowLeft':\n                keys.ArrowLeft.pressed = true\n                player.facing = \"left\"\n                player.image.src = standing_left[0]\n                break;\n            case 'ArrowUp':\n                keys.ArrowUp.pressed = true\n                break;\n            case ' ':\n                keys.Space.pressed = true;\n                // setTimeout(() => {\n                //     keys.Space.pressed = false;\n                // }, 2000); // 2 seconds delay\n                // console.log(\"space\")\n                // break;\n        }\n    })\n\n    window.addEventListener('keyup', (e) => {\n        switch (e.key) {\n            case 'ArrowRight':\n                keys.ArrowRight.pressed = false\n                break;\n            case 'ArrowLeft':\n                keys.ArrowLeft.pressed = false\n                break;\n            case 'ArrowUp':\n                keys.ArrowUp.pressed = false\n                break;\n            // case ' ':\n            //     keys.Space.pressed = false\n            //     break;\n        }\n    })\n    \n})","// import InkBullets from \"./ink_bullets\"\n// import splatOne from '../../assests/splat1.png';\n// import splatTwo from '../../assests/splat2.png';\n\nconst CONSTANTS = {\n    gravity: 0.4,\n}\n\nclass Player {\n    constructor(position, canvas, ctx, image) {\n        this.position = position\n        this.velocity = {\n            x: 0,\n            y: 1\n        }\n        this.width = 75\n        this.height = 75\n        this.isJumping = false\n        this.isAlive = true\n        this.canvas = canvas\n        this.ctx = ctx\n        this.inkMeter = 0\n        this.image = image\n        this.animationFrame = 0\n        this.animationDelay = 0\n        this.hitbox = {\n            x: this.width - 30\n        }\n        this.facing = \"right\"\n    }\n\n    draw() {\n        // this.ctx.fillStyle = 'red'\n        // this.ctx.fillRect(this.position.x, this.position.y, this.width, this.height)\n        this.ctx.drawImage(this.image, this.position.x, this.position.y, this.width, this.height)\n    }\n\n    update() {\n        this.draw();\n\n        if (this.position.x + this.velocity.x >= 0 && this.position.x + this.velocity.x + this.width <= this.canvas.width) {\n            this.position.x += this.velocity.x;\n          }\n          \n        this.position.y += this.velocity.y\n        if (this.position.y + this.height + this.velocity.y < this.canvas.height)\n            {this.velocity.y += CONSTANTS.gravity}\n        else \n            {this.velocity.y = 0; this.isJumping = false}\n    }\n\n    jump() {\n        if (!this.isJumping) {\n            this.velocity.y = -10\n            this.isJumping = true\n        }\n    }\n\n    playerDied() {\n        if (!this.isAlive) {\n            this.position.x = 50\n            this.position.y = 200\n            this.isAlive = true\n        }\n    }\n\n    // shootInk() {\n    //     if (this.facing === \"right\" && this.inkMeter >= 10) {\n    //         const inkBullet = new InkBullets({x: this.position.x + 10, y: this.position.y},)\n    //     }\n    //     else if (this.facing === \"left\" && this.inkMeter >= 10) {\n    //         const inkBullet = new InkBullets({x: this.position.x - 10, y: this.position.y})\n    //     }\n    // }\n}\n\nexport default Player;"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","constructor","position","ctx","image","dimensions","draw","drawImage","x","y","width","height","Image","inkImage","addEventListener","canvas","querySelector","getContext","hiddenCanvas","hiddenCtx","startGameButton","getElementById","gameMusic","Audio","clintEast","autoplay","play","standing_right","ghostRight1","ghostRight2","standing_left","ghostLeft1","ghostLeft2","createImage","imageSrc","player","velocity","isJumping","isAlive","inkMeter","animationFrame","animationDelay","hitbox","facing","update","jump","playerDied","platforms","scenery","traps","inks","scrollOffset","keys","ArrowRight","pressed","ArrowLeft","ArrowUp","Space","inkLevel","reset","Platform","concreteImage","drywallImage","Scenery","skylineImage","toonblueeyesImage","Trap","spikesImage","Ink","collisionDetector","collider","collideObj","animate","requestAnimationFrame","fillStyle","fillRect","clearRect","forEach","scene","trap","ink","platform","InkBullets","splatOne","setTimeout","splatTwo","ghostJump","console","log","splice","percentageRemaining","style","key"],"sourceRoot":""}